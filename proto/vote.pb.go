// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: proto/vote.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Entities
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type VoteStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Video  string `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	User   string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Upvote bool   `protobuf:"varint,4,opt,name=upvote,proto3" json:"upvote,omitempty"`
}

func (x *VoteStruct) Reset() {
	*x = VoteStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteStruct) ProtoMessage() {}

func (x *VoteStruct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteStruct.ProtoReflect.Descriptor instead.
func (*VoteStruct) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{1}
}

func (x *VoteStruct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VoteStruct) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *VoteStruct) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *VoteStruct) GetUpvote() bool {
	if x != nil {
		return x.Upvote
	}
	return false
}

// Requests
type InsertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote *VoteStruct `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *InsertRequest) Reset() {
	*x = InsertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRequest) ProtoMessage() {}

func (x *InsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRequest.ProtoReflect.Descriptor instead.
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{2}
}

func (x *InsertRequest) GetVote() *VoteStruct {
	if x != nil {
		return x.Vote
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{3}
}

func (x *GetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NewValue bool   `protobuf:"varint,2,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
}

func (x *UpdateOneRequest) Reset() {
	*x = UpdateOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneRequest) ProtoMessage() {}

func (x *UpdateOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneRequest.ProtoReflect.Descriptor instead.
func (*UpdateOneRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateOneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOneRequest) GetNewValue() bool {
	if x != nil {
		return x.NewValue
	}
	return false
}

type DeleteOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOneRequest) Reset() {
	*x = DeleteOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneRequest) ProtoMessage() {}

func (x *DeleteOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneRequest.ProtoReflect.Descriptor instead.
func (*DeleteOneRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteOneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListVotesInVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListVotesInVideoRequest) Reset() {
	*x = ListVotesInVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVotesInVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVotesInVideoRequest) ProtoMessage() {}

func (x *ListVotesInVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVotesInVideoRequest.ProtoReflect.Descriptor instead.
func (*ListVotesInVideoRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{6}
}

func (x *ListVotesInVideoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListVotesOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListVotesOfUserRequest) Reset() {
	*x = ListVotesOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVotesOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVotesOfUserRequest) ProtoMessage() {}

func (x *ListVotesOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVotesOfUserRequest.ProtoReflect.Descriptor instead.
func (*ListVotesOfUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{7}
}

func (x *ListVotesOfUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Responses
type InsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{8}
}

func (x *InsertResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote *VoteStruct `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{9}
}

func (x *GetResponse) GetVote() *VoteStruct {
	if x != nil {
		return x.Vote
	}
	return nil
}

type UpdateOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateResult string `protobuf:"bytes,1,opt,name=update_result,json=updateResult,proto3" json:"update_result,omitempty"`
}

func (x *UpdateOneResponse) Reset() {
	*x = UpdateOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOneResponse) ProtoMessage() {}

func (x *UpdateOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOneResponse.ProtoReflect.Descriptor instead.
func (*UpdateOneResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateOneResponse) GetUpdateResult() string {
	if x != nil {
		return x.UpdateResult
	}
	return ""
}

type DeleteOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeleteResult string `protobuf:"bytes,1,opt,name=delete_result,json=deleteResult,proto3" json:"delete_result,omitempty"`
}

func (x *DeleteOneResponse) Reset() {
	*x = DeleteOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOneResponse) ProtoMessage() {}

func (x *DeleteOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOneResponse.ProtoReflect.Descriptor instead.
func (*DeleteOneResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteOneResponse) GetDeleteResult() string {
	if x != nil {
		return x.DeleteResult
	}
	return ""
}

type ListVotesInVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote *VoteStruct `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *ListVotesInVideoResponse) Reset() {
	*x = ListVotesInVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVotesInVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVotesInVideoResponse) ProtoMessage() {}

func (x *ListVotesInVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVotesInVideoResponse.ProtoReflect.Descriptor instead.
func (*ListVotesInVideoResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{12}
}

func (x *ListVotesInVideoResponse) GetVote() *VoteStruct {
	if x != nil {
		return x.Vote
	}
	return nil
}

type ListVotesOfUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vote *VoteStruct `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (x *ListVotesOfUserResponse) Reset() {
	*x = ListVotesOfUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_vote_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVotesOfUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVotesOfUserResponse) ProtoMessage() {}

func (x *ListVotesOfUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVotesOfUserResponse.ProtoReflect.Descriptor instead.
func (*ListVotesOfUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{13}
}

func (x *ListVotesOfUserResponse) GetVote() *VoteStruct {
	if x != nil {
		return x.Vote
	}
	return nil
}

var File_proto_vote_proto protoreflect.FileDescriptor

var file_proto_vote_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5e, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x76, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73,
	0x49, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x76, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65,
	0x22, 0x38, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x73, 0x49, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x40, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x6f, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x32, 0xa2, 0x03, 0x0a, 0x04, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x08,
	0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_vote_proto_rawDescOnce sync.Once
	file_proto_vote_proto_rawDescData = file_proto_vote_proto_rawDesc
)

func file_proto_vote_proto_rawDescGZIP() []byte {
	file_proto_vote_proto_rawDescOnce.Do(func() {
		file_proto_vote_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_vote_proto_rawDescData)
	})
	return file_proto_vote_proto_rawDescData
}

var file_proto_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_vote_proto_goTypes = []interface{}{
	(*Message)(nil),                  // 0: proto.Message
	(*VoteStruct)(nil),               // 1: proto.VoteStruct
	(*InsertRequest)(nil),            // 2: proto.InsertRequest
	(*GetRequest)(nil),               // 3: proto.GetRequest
	(*UpdateOneRequest)(nil),         // 4: proto.UpdateOneRequest
	(*DeleteOneRequest)(nil),         // 5: proto.DeleteOneRequest
	(*ListVotesInVideoRequest)(nil),  // 6: proto.ListVotesInVideoRequest
	(*ListVotesOfUserRequest)(nil),   // 7: proto.ListVotesOfUserRequest
	(*InsertResponse)(nil),           // 8: proto.InsertResponse
	(*GetResponse)(nil),              // 9: proto.GetResponse
	(*UpdateOneResponse)(nil),        // 10: proto.UpdateOneResponse
	(*DeleteOneResponse)(nil),        // 11: proto.DeleteOneResponse
	(*ListVotesInVideoResponse)(nil), // 12: proto.ListVotesInVideoResponse
	(*ListVotesOfUserResponse)(nil),  // 13: proto.ListVotesOfUserResponse
}
var file_proto_vote_proto_depIdxs = []int32{
	1,  // 0: proto.InsertRequest.vote:type_name -> proto.VoteStruct
	1,  // 1: proto.GetResponse.vote:type_name -> proto.VoteStruct
	1,  // 2: proto.ListVotesInVideoResponse.vote:type_name -> proto.VoteStruct
	1,  // 3: proto.ListVotesOfUserResponse.vote:type_name -> proto.VoteStruct
	2,  // 4: proto.Vote.Insert:input_type -> proto.InsertRequest
	3,  // 5: proto.Vote.Get:input_type -> proto.GetRequest
	4,  // 6: proto.Vote.UpdateOne:input_type -> proto.UpdateOneRequest
	5,  // 7: proto.Vote.DeleteOne:input_type -> proto.DeleteOneRequest
	6,  // 8: proto.Vote.ListVotesInVideo:input_type -> proto.ListVotesInVideoRequest
	7,  // 9: proto.Vote.ListVotesOfUser:input_type -> proto.ListVotesOfUserRequest
	8,  // 10: proto.Vote.Insert:output_type -> proto.InsertResponse
	9,  // 11: proto.Vote.Get:output_type -> proto.GetResponse
	10, // 12: proto.Vote.UpdateOne:output_type -> proto.UpdateOneResponse
	11, // 13: proto.Vote.DeleteOne:output_type -> proto.DeleteOneResponse
	12, // 14: proto.Vote.ListVotesInVideo:output_type -> proto.ListVotesInVideoResponse
	13, // 15: proto.Vote.ListVotesOfUser:output_type -> proto.ListVotesOfUserResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_vote_proto_init() }
func file_proto_vote_proto_init() {
	if File_proto_vote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_vote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVotesInVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVotesOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVotesInVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_vote_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVotesOfUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_vote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vote_proto_goTypes,
		DependencyIndexes: file_proto_vote_proto_depIdxs,
		MessageInfos:      file_proto_vote_proto_msgTypes,
	}.Build()
	File_proto_vote_proto = out.File
	file_proto_vote_proto_rawDesc = nil
	file_proto_vote_proto_goTypes = nil
	file_proto_vote_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VoteClient is the client API for Vote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VoteClient interface {
	Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	UpdateOne(ctx context.Context, in *UpdateOneRequest, opts ...grpc.CallOption) (*UpdateOneResponse, error)
	DeleteOne(ctx context.Context, in *DeleteOneRequest, opts ...grpc.CallOption) (*DeleteOneResponse, error)
	ListVotesInVideo(ctx context.Context, in *ListVotesInVideoRequest, opts ...grpc.CallOption) (Vote_ListVotesInVideoClient, error)
	ListVotesOfUser(ctx context.Context, in *ListVotesOfUserRequest, opts ...grpc.CallOption) (Vote_ListVotesOfUserClient, error)
}

type voteClient struct {
	cc grpc.ClientConnInterface
}

func NewVoteClient(cc grpc.ClientConnInterface) VoteClient {
	return &voteClient{cc}
}

func (c *voteClient) Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/proto.Vote/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voteClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.Vote/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voteClient) UpdateOne(ctx context.Context, in *UpdateOneRequest, opts ...grpc.CallOption) (*UpdateOneResponse, error) {
	out := new(UpdateOneResponse)
	err := c.cc.Invoke(ctx, "/proto.Vote/UpdateOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voteClient) DeleteOne(ctx context.Context, in *DeleteOneRequest, opts ...grpc.CallOption) (*DeleteOneResponse, error) {
	out := new(DeleteOneResponse)
	err := c.cc.Invoke(ctx, "/proto.Vote/DeleteOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voteClient) ListVotesInVideo(ctx context.Context, in *ListVotesInVideoRequest, opts ...grpc.CallOption) (Vote_ListVotesInVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Vote_serviceDesc.Streams[0], "/proto.Vote/ListVotesInVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &voteListVotesInVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Vote_ListVotesInVideoClient interface {
	Recv() (*ListVotesInVideoResponse, error)
	grpc.ClientStream
}

type voteListVotesInVideoClient struct {
	grpc.ClientStream
}

func (x *voteListVotesInVideoClient) Recv() (*ListVotesInVideoResponse, error) {
	m := new(ListVotesInVideoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *voteClient) ListVotesOfUser(ctx context.Context, in *ListVotesOfUserRequest, opts ...grpc.CallOption) (Vote_ListVotesOfUserClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Vote_serviceDesc.Streams[1], "/proto.Vote/ListVotesOfUser", opts...)
	if err != nil {
		return nil, err
	}
	x := &voteListVotesOfUserClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Vote_ListVotesOfUserClient interface {
	Recv() (*ListVotesOfUserResponse, error)
	grpc.ClientStream
}

type voteListVotesOfUserClient struct {
	grpc.ClientStream
}

func (x *voteListVotesOfUserClient) Recv() (*ListVotesOfUserResponse, error) {
	m := new(ListVotesOfUserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VoteServer is the server API for Vote service.
type VoteServer interface {
	Insert(context.Context, *InsertRequest) (*InsertResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	UpdateOne(context.Context, *UpdateOneRequest) (*UpdateOneResponse, error)
	DeleteOne(context.Context, *DeleteOneRequest) (*DeleteOneResponse, error)
	ListVotesInVideo(*ListVotesInVideoRequest, Vote_ListVotesInVideoServer) error
	ListVotesOfUser(*ListVotesOfUserRequest, Vote_ListVotesOfUserServer) error
}

// UnimplementedVoteServer can be embedded to have forward compatible implementations.
type UnimplementedVoteServer struct {
}

func (*UnimplementedVoteServer) Insert(context.Context, *InsertRequest) (*InsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedVoteServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedVoteServer) UpdateOne(context.Context, *UpdateOneRequest) (*UpdateOneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOne not implemented")
}
func (*UnimplementedVoteServer) DeleteOne(context.Context, *DeleteOneRequest) (*DeleteOneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOne not implemented")
}
func (*UnimplementedVoteServer) ListVotesInVideo(*ListVotesInVideoRequest, Vote_ListVotesInVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method ListVotesInVideo not implemented")
}
func (*UnimplementedVoteServer) ListVotesOfUser(*ListVotesOfUserRequest, Vote_ListVotesOfUserServer) error {
	return status.Errorf(codes.Unimplemented, "method ListVotesOfUser not implemented")
}

func RegisterVoteServer(s *grpc.Server, srv VoteServer) {
	s.RegisterService(&_Vote_serviceDesc, srv)
}

func _Vote_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoteServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vote/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoteServer).Insert(ctx, req.(*InsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vote_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoteServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vote/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoteServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vote_UpdateOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoteServer).UpdateOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vote/UpdateOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoteServer).UpdateOne(ctx, req.(*UpdateOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vote_DeleteOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoteServer).DeleteOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Vote/DeleteOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoteServer).DeleteOne(ctx, req.(*DeleteOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vote_ListVotesInVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListVotesInVideoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VoteServer).ListVotesInVideo(m, &voteListVotesInVideoServer{stream})
}

type Vote_ListVotesInVideoServer interface {
	Send(*ListVotesInVideoResponse) error
	grpc.ServerStream
}

type voteListVotesInVideoServer struct {
	grpc.ServerStream
}

func (x *voteListVotesInVideoServer) Send(m *ListVotesInVideoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Vote_ListVotesOfUser_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListVotesOfUserRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VoteServer).ListVotesOfUser(m, &voteListVotesOfUserServer{stream})
}

type Vote_ListVotesOfUserServer interface {
	Send(*ListVotesOfUserResponse) error
	grpc.ServerStream
}

type voteListVotesOfUserServer struct {
	grpc.ServerStream
}

func (x *voteListVotesOfUserServer) Send(m *ListVotesOfUserResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Vote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Vote",
	HandlerType: (*VoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _Vote_Insert_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Vote_Get_Handler,
		},
		{
			MethodName: "UpdateOne",
			Handler:    _Vote_UpdateOne_Handler,
		},
		{
			MethodName: "DeleteOne",
			Handler:    _Vote_DeleteOne_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListVotesInVideo",
			Handler:       _Vote_ListVotesInVideo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListVotesOfUser",
			Handler:       _Vote_ListVotesOfUser_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/vote.proto",
}
